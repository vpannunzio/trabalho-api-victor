name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: Testes e Qualidade de Código
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x, 18.x, 20.x]

    steps:
    - name: Checkout código
      uses: actions/checkout@v4

    - name: Configurar Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Instalar dependências
      run: npm ci

    - name: Executar linting
      run: |
        # Verificar sintaxe básica
        node -c src/app.js
        echo "✅ Sintaxe básica OK"

    - name: Executar testes
      run: npm test
      env:
        NODE_ENV: test
        JWT_SECRET: test-jwt-secret-key
        PORT: 3001

    - name: Gerar relatório de cobertura
      run: npm run test:coverage
      env:
        NODE_ENV: test
        JWT_SECRET: test-jwt-secret-key
        PORT: 3001

    - name: Upload cobertura para Codecov
      if: always()
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  security:
    name: Análise de Segurança
    runs-on: ubuntu-latest

    steps:
    - name: Checkout código
      uses: actions/checkout@v4

    - name: Configurar Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'

    - name: Instalar dependências
      run: npm ci

    - name: Executar auditoria de segurança
      run: npm audit --audit-level=moderate

    - name: Verificar vulnerabilidades conhecidas
      run: |
        echo "🔍 Verificando dependências com vulnerabilidades conhecidas..."
        npm audit --json > audit-results.json || true
        echo "✅ Auditoria de segurança concluída"

  build:
    name: Build e Deploy
    runs-on: ubuntu-latest
    needs: [test, security]
    if: github.ref == 'refs/heads/main'

    steps:
    - name: Checkout código
      uses: actions/checkout@v4

    - name: Configurar Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'

    - name: Instalar dependências
      run: npm ci

    - name: Build da aplicação
      run: |
        echo "🏗️ Fazendo build da aplicação..."
        # Verificar se a aplicação inicia corretamente
        timeout 10s npm start || true
        echo "✅ Build concluído"

    - name: Teste de integração final
      run: |
        echo "🧪 Executando teste de integração final..."
        npm test
        echo "✅ Todos os testes passaram"

    - name: Preparar para deploy
      run: |
        echo "📦 Preparando artefatos para deploy..."
        mkdir -p dist
        cp -r src dist/
        cp package.json dist/
        cp package-lock.json dist/ || true
        echo "✅ Artefatos preparados"

    - name: Upload artefatos
      uses: actions/upload-artifact@v3
      with:
        name: app-dist
        path: dist/

  notify:
    name: Notificação de Status
    runs-on: ubuntu-latest
    needs: [test, security, build]
    if: always()

    steps:
    - name: Notificar sucesso
      if: needs.test.result == 'success' && needs.security.result == 'success'
      run: |
        echo "✅ Pipeline executada com sucesso!"
        echo "🎉 Todos os testes passaram"
        echo "🔒 Análise de segurança OK"
        echo "🚀 Aplicação pronta para deploy"

    - name: Notificar falha
      if: needs.test.result == 'failure' || needs.security.result == 'failure'
      run: |
        echo "❌ Pipeline falhou!"
        echo "🔍 Verifique os logs para mais detalhes"
        exit 1
